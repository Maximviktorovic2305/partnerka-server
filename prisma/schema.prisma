generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name     String?
  lastname String?
  email    String  @unique
  password String

  isAdmin Boolean @default(false)
}

model Partner {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name         String?
  lastname     String?
  email        String? @unique
  registerDate String?

  phone       String?
  balance     Int?    @default(0)
  totalAwards Int?    @default(0)

  // leads  Int?
  status String? @default("Базовый")

  leads        Lead[]
  referralLink ReferralLink[]
  offer        Offer?         @relation(fields: [offerId], references: [id])
  offerId      Int?

  withdraws Withdraw[]
}

model Lead {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  createdFormatedDate String?
  updatedFormatedDate String?

  name   String?
  sourse String? @default("Прямое добавление")
  status String? @default("Новый")

  offer  String?
  amount Int?

  partner   Partner? @relation(fields: [partnerId], references: [id])
  partnerId Int?
}

model ReferralLink {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String?

  createdFormatedDate String?
  updatedFormatedDate String?

  partner   Partner? @relation(fields: [partnerId], references: [id])
  partnerId Int?

  hash String? @unique

  viewCount       Int? @default(0)
  viewUniqueCount Int? @default(0)

  localeLinkPath String?
  serverLinkPath String?
  conversions    Int?    @default(0)

  amountToAwait Int? @default(0)
  amountToPay   Int? @default(0)

  offer   Offer? @relation(fields: [offerId], references: [id])
  offerId Int?
}

model Offer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name          String?
  domain        String? @default("http://localhost:3533")
  conversions   Int?    @default(0)
  amount        Int?    @default(0)
  status        String? @default("active")
  partnersCount Int?    @default(0)

  partners Partner[]

  refferalLinks ReferralLink[]
}

model Withdraw {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  createdFormatedDate String?

  partner   Partner? @relation(fields: [partnerId], references: [id], onDelete: Cascade)
  partnerId Int?   

  isPaydOut Boolean? @default(false)

  partnerEmail String?
  comment      String?
  amount       Int?
}
